server.port=8081

spring.cloud.function.definition=process

spring.cloud.stream.bindings.process-in-0.consumer.max-attempts=3
spring.cloud.stream.bindings.process-in-0.consumer.defaultRetryable=false
spring.cloud.stream.bindings.process-in-0.consumer.retryableExceptions.java.lang.IllegalStateException=false
spring.cloud.stream.bindings.process-in-0.destination=my-stream
spring.cloud.stream.bindings.process-in-0.group=myFirstGroup
spring.cloud.stream.rabbit.bindings.process-in-0.consumer.acknowledgeMode=AUTO
#spring.cloud.stream.kafka.binder.required-acks=all


#spring.cloud.stream.rabbit.binder.brokers=localhost:5672

spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.template.retry.enabled=true
spring.rabbitmq.template.retry.initial-interval=2s
spring.rabbitmq.stream.name=my-stream

# https://docs.spring.io/spring-kafka/reference/kafka/receiving-messages/message-listener-container.html#committing-offsets
#spring.cloud.stream.kafka.bindings.process-in-0.consumer.ackMode=MANUAL_IMMEDIATE

#spring.cloud.stream.kafka.bindings.process-in-0.consumer.enable-dlq=true
#spring.cloud.stream.kafka.bindings.process-in-0.consumer.dlq-name=myGenericDlq
#spring.cloud.stream.kafka.bindings.process-in-0.consumer.dlq-partitions=3
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer


#spring.cloud.stream.kafka.bindings.process-in-0.consumer.startOffset=latest

#spring.cloud.stream.bindings.myBusinessDlq.producer.partition-count=3
#spring.cloud.stream.bindings.myBusinessDlq.producer.partition-key-expression=headers['partitionKey']
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer

#spring.cloud.stream.kafka.binder.required-acks=all